# Generated by Django 4.0.6 on 2022-11-10 06:01

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=120)),
                ('image', models.ImageField(null=True, upload_to='images')),
                ('address', models.TextField(max_length=120)),
                ('location', models.CharField(max_length=50)),
                ('star_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('owner_name', models.CharField(max_length=50)),
                ('owner_image', models.ImageField(blank=True, null=True, upload_to='owner_images')),
                ('owner_email', models.EmailField(max_length=254, null=True)),
                ('owner_mobile', models.CharField(max_length=12)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_hotel', models.BooleanField(default=False, verbose_name='Is hotel')),
                ('is_guest', models.BooleanField(default=False, verbose_name='Is guest')),
                ('username', models.CharField(max_length=30)),
                ('password1', models.CharField(max_length=50)),
                ('password2', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_hotel', models.BooleanField(default=False, verbose_name='Is hotel')),
                ('is_guest', models.BooleanField(default=False, verbose_name='Is guest')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('others', 'others')], max_length=20, null=True)),
                ('mobile', models.CharField(max_length=12, null=True)),
                ('email', models.EmailField(max_length=200, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password1', models.CharField(max_length=50)),
                ('password2', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=20)),
                ('availability', models.CharField(choices=[('Booked', 'Booked'), ('Open', 'Open')], default='Open', max_length=50)),
                ('price', models.PositiveIntegerField()),
                ('occupancy_adult', models.PositiveIntegerField()),
                ('occupancy_child', models.PositiveIntegerField()),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hotel.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('Expired', 'Expired')], max_length=50)),
                ('occupancy_adult', models.PositiveIntegerField()),
                ('occupancy_child', models.PositiveIntegerField()),
                ('stay_start_date', models.DateField()),
                ('stay_end_date', models.DateField()),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hotel.room')),
            ],
        ),
    ]
